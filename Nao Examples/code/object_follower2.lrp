(machine ObjectFollower	(var object := ['RedBall'])	(var sizeObject := [0.04])	(var walkSpeed := [0.05])	(var turnSpeed := [0.1])	(var maxDistance := [0.5])	(var deltaAlign := [0.5])	(var objectPosition := [#(0 0 0)])	(var headLabel := ['Device/SubDeviceList/HeadYaw/Position/Actuator/Value'])	(var headYaw := [0])	(var searchTaskId := [0])	(state init 		(onentry[			robot serviceALMotion wakeUp.			robot serviceALRobotPosture async goToPosture: 'StandInit' speed: 0.8		])	)	(state registerObject		(onentry [			robot serviceALTracker registerTarget: object size: sizeObject.			robot serviceALTracker track: object.		])	)	(state follow		(machine follow						(state stop (onentry [robot serviceALMotion async stopMove]))			(state decideMovement				(onentry [					objectPosition := robot serviceALTracker getTargetPosition: 2.					headYaw := robot serviceALMemory getData: headLabel.				])				(running [					objectPosition := robot serviceALTracker getTargetPosition: 2.					headYaw := robot serviceALMemory getData: headLabel.				])			)			(state alignLeft				(onentry [					robot serviceALMotion						moveSpeedX: 0 speedY: 0 speedTheta: turnSpeed				])			)			(state alignRight				(onentry [					robot serviceALMotion							moveSpeedX: 0 speedY: 0 speedTheta: turnSpeed negated				])			)			(state forward				(onentry [robot serviceALMotion							moveSpeedX: walkSpeed speedY: 0 speedTheta: 0])			)			(on [robot serviceALMotion lastProcess isFinished] 				stop -> decideMovement)						(on notAlignedLeft decideMovement -> alignLeft)			(on notAlignedRight decideMovement -> alignRight)			(on notClose decideMovement -> forward)						(on close decideMovement -> stop)			(on aligned decideMovement -> stop)						(eps forward -> decideMovement)			(eps alignLeft -> decideMovement)			(eps alignRight -> decideMovement)			(event notAlignedRight [				headYaw < 0					and: [headYaw abs > deltaAlign ]			])			(event notAlignedLeft [				headYaw > 0 					and: [headYaw > deltaAlign]			])			(event aligned [headYaw abs < deltaAlign])			(event notClose [objectPosition first > maxDistance ])			(event close [objectPosition first < maxDistance])					)		(onentry (spawn follow stop))		(onexit [robot serviceALMotion stopMove])	)	(state search		(onentry [ searchTaskId := robot serviceMyAnimation  searchHead.])		(onexit [robot serviceALMotion stop: searchTaskId])	)		(on [robot serviceALRobotPosture lastProcess isFinished] init -> registerObject)	(eps registerObject -> search)	(on targetDetected search -> follow)	(on targetLost follow -> search)	(on [robot serviceMyAnimation lastProcess isFinished] search -> search)	(event targetDetected [robot serviceALTracker isTargetLost not])	(event targetLost [robot serviceALTracker isTargetLost]))(spawn ObjectFollower init)