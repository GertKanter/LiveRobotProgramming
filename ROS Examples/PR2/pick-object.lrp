;;; New program created by TomasDiaz on 15 June 2016;; LRP program that moves to a certain position in front of a table;; and then picks an object and places it in one of three boxes depending;; on choice taken;;;; positioning_pr2 machine is supposed to do all the placement of the;; PR2 in front of the table. It is not currently spawned.;; move ->  base_controller/command;; moveit -> t2moveit_cmd ;; speak -> speakme;;;; laser <- base_scan(machine positioning_pr2	(var moveToSideBy := [[:val | robot move: [:twist | twist linear y: val]]])	(var laserPointsFromTo := [[:init :end | robot laser ranges copyFrom: init to: end]])		(state correctlyPlaced		(onentry (spawn pick_object goingFirstPosition)))			(state stopped       		(onentry [robot move:     		    		   [:twist | twist linear x: 0.0.                  				  twist angular z: 0.0]]))	(state adjustingTorso		(onentry [robot moveit: [:msg | msg data: 'use torso'.									msg data: 'go extended_torso']]))	(state movingForward		(running [robot move: [:twist | twist linear x: 0.1]]))	(state movingRight		(running [moveToSideBy value: -0.1]))	(state movingLeft		(running [moveToSideBy value: 0.1]))	(event closeEnoughToTable 		[((robot laser ranges copyFrom: 378 to: 695 ) select: [:laserPoint | laserPoint <= 0.30]) size >= 30])		(event tooMuchToTheRight		[((robot laser ranges copyFrom: 380 to: 395) select: [:point | point >= 0.4]) size > 4])	(event tooMuchToTheLeft		[((robot laser ranges copyFrom: 680 to: 694) select: [:point | point >= 0.4]) size > 4])	(event alignedSides 		[(((robot laser ranges copyFrom: 380 to: 390) select: [:point | (point - 0.38) abs < 0.03]) size >= 4) and: (((robot laser ranges copyFrom: 684 to: 694) select: [:point | (point - 0.38) abs < 0.03]) size >= 4) ]		)		(event imminentCollision		[(robot laser ranges select: [:laserPoint | laserPoint <= 0.25]) size >= 5])		(ontime 10000 adjustingTorso -> movingForward)	(on closeEnoughToTable movingForward -> stopped)	(on tooMuchToTheRight stopped -> movingLeft)	(on tooMuchToTheRight movingRight -> movingLeft)	(on tooMuchToTheLeft stopped -> movingRight)	(on tooMuchToTheLeft movingLeft -> movingRight)	(on alignedSides *-> correctlyPlaced)	(on imminentCollision *-> stopped));; Machine speak_pr2 communicates with the user and talks to him(machine speak_pr2	(var say := [[:text | robot speak: [:msg | msg data: text]]])	(state askingForObject		(onentry [say value: 'Cual objeto tomo?']))		(state noRequestMade		(onentry [say value: 'Sin respuesta, tomando objeto']))		(state exitingMachine		(onentry (spawn pick_object goingFirstPosition)))			(ontime 5000 askingForObject -> noRequestMade)	(ontime 1000 noRequestMade -> exitingMachine));; machine pick_object handles picking the object and placing it in a location(machine pick_object	(var cmd := [[:text | robot moveit: [:msg | msg data: text]]])	(state goingFirstPosition		(onentry [cmd value: 'use left_arm'.					cmd value: 'go object_pick_first_pos']))			(state openingGripper		(onentry [cmd value: 'use left_gripper'.					cmd value: 'go openedgripper']))		(state goingSecondPosition			(onentry [cmd value: 'use left_arm'.					cmd value: 'go object_pick_second_pos']))	(state closingGripper		(onentry [cmd value: 'use left_gripper'.					cmd value: 'go closedgripper']))	(state releasingObject		(onentry [cmd value: 'use left_gripper'.					cmd value: 'go openedgripper']))						(state goingThirdPosition		(onentry [cmd value: 'use left_arm'.				cmd value: 'go object_pick_third_pos']))	(state goingFourthPosition		(onentry [cmd value: 'use left_arm'.				cmd value: 'go object_pick_fourth_pos']))					(ontime 2000 goingFirstPosition -> openingGripper)	(ontime 3000 openingGripper -> goingSecondPosition)	(ontime 1500 goingSecondPosition -> closingGripper)	(ontime 3000 closingGripper -> goingThirdPosition)	(ontime 1500 goingThirdPosition -> goingFourthPosition)	(ontime 1500 goingFourthPosition -> releasingObject));(spawn positioning_pr2 correctlyPlaced)(spawn speak_pr2 askingForObject);(spawn pick_object goingFirstPosition)